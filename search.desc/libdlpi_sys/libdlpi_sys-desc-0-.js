searchState.loadedDescShard("libdlpi_sys", 0, "Open IP DLPI link under /dev/ipnet.\nOpen DLPI link under /dev only.\nbad DLPI link\nbad DLPI message\ninvalid DLPI handle\ninvalid argument\nDLPI_IPNETINFO not supported\ninvalid DLPI linkname\nunsupported DLPI connection mode\nDLPI link does not exist\ninvalid DLPI notification id\ninvalid DLPI notification type\nDLPI notif. not supported by link\nDLPI style-2 node reports style-1\nDLPI raw mode not supported\nDLPI operation timed out\nunavailable DLPI SAP\nunsupported DLPI Version\nDLPI Flags Exclusive open.\nDLPI operation failed\nRequest ipnetinfo headers.\nOpen DLPI link in native mode.\nDo not attach PPA.\nOpen DLPI link in passive mode.\nMaximum size for a physical address.\nOpen DLPI link in raw mode.\nSynchronous serial line interface.\nDLPI operation succeeded\nPromiscuous mode for multicast\nPromiscuous mode at the phys level\nPromiscuous mode for rx only\nPromiscuous mode at the sap level\nIndicates a non-DLPI specific system error in a DLPI call.\nDefines priority for DLPI traffic sent.\nIndicates if an address is unicast or not.\nAttempt to bind the provided DLPI handle to the service …\nCloses the open DLPI link instance associated with the …\nDisable reception of messages destined to the multicast …\nEnable reception of messages destined to the multicast …\nReturns a file descriptor that can be used to directly …\nOpaque handle to a DLPI link instance.\nCreates an instance of the DLPI version 2 link named by …\nDisable promiscuous mode for the specified handle. See …\nEnable promiscuous mode for the specified handle. See …\nAttempt to receive data messages over the DLIP link …\nInformation from received DLPI traffic.\nAttempt to send the contets of msgbuf over the DLPI link …\nInformation used to send DLPI traffic.\nRange spans from 0 to 100 where 0 is the highest.\nService access point to use. For ethernet, this is the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA convenience method for creating a null dlpi handle to be …")